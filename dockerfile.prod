# Dependencias 
FROM node:21-alpine3.19 as deps

WORKDIR /usr/src/app

COPY package*.json ./

RUN npm install -g npm@latest \
    && npm config set fetch-timeout 120000 \
    && npm config set fetch-retries 5 \
    && npm config set fetch-retry-maxtimeout 20000 \
    && npm config set fetch-retry-maxtimeout 120000 \
    && npm cache clean --force

RUN npm install --omit=optional

# Builder - Construye la aplicación 
FROM node:21-alpine3.19 as build

WORKDIR /usr/src/app

# Copiar de deps, los módulos de node
COPY --from=deps /usr/src/app/node_modules ./node_modules

# Copiar todo el código fuente de la aplicación
COPY . .

# Construye la aplicación
RUN npm run build

RUN npm ci --only=production && npm cache clean --force

RUN npx prisma generate

# Crear la imagen final de docker 
FROM node:21-alpine3.19 as prod

WORKDIR /usr/src/app

COPY --from=build /usr/src/app/node_modules ./node_modules

# Copiar la carpeta dist generada en la etapa de build
COPY --from=build /usr/src/app/dist ./dist
COPY --from=build /usr/src/app/prisma ./prisma

ENV NODE_ENV=production

# Establecer permisos de escritura para la base de datos
RUN chown -R node:node /usr/src/app/prisma && chmod 664 /usr/src/app/prisma/dev.db

# Solo privilegio de ejecución
USER node

EXPOSE 3000 

CMD [ "node", "dist/main.js" ]
